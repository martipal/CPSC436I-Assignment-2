{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\Messages.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createIFrame } from '../actions';\nexport default class Messages extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showPopUp: false\n    };\n  }\n\n  render() {\n    const messages = this.props.messages;\n    const fontColour = this.props.fontColour.fontColour;\n    let messageList = [];\n    console.log({\n      fontColour\n    });\n\n    for (var i = 0; i < this.props.numberOfMessages; i++) {\n      let message = messages[i];\n      console.log(this.props.fontType);\n\n      if (this.props.moveMessages) {\n        messageList.push(React.createElement(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"marquee\", {\n          behaviour: \"alternate\",\n          onClick: () => {\n            window.open(\"//\" + \"google.com/search?q=\" + message.toString(), 'popup', 'width=400,height=400');\n            return false;\n          },\n          onContextMenu: () => {\n            window.open(\"https://www.youtube.com/results?search_query=\" + message.toString(), 'popup', 'width=400,height=400');\n            return false;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \" \", message, \" \")));\n      } else {\n        messageList.push(React.createElement(\"li\", {\n          key: i,\n          onClick: () => {\n            window.open(\"//\" + \"google.com/search?q=\" + message.toString(), 'popup', 'width=400,height=400');\n            return false;\n          },\n          onContextMenu: () => {\n            window.open(\"https://www.youtube.com/results?search_query=\" + message.toString(), 'popup', 'width=400,height=400');\n            return false;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \" \", message, \" \"));\n      }\n    }\n\n    for (var i = 0; i < messageList.length; i++) {\n      messageList[i].style.color = {\n        fontColour\n      };\n    }\n\n    return messageList;\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\Messages.js"],"names":["React","connect","createIFrame","Messages","Component","constructor","state","showPopUp","render","messages","props","fontColour","messageList","console","log","i","numberOfMessages","message","fontType","moveMessages","push","window","open","toString","length","style","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAElDC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AAAA,UACIC,QADJ,GACiB,KAAKC,KADtB,CACID,QADJ;AAAA,UAEIE,UAFJ,GAEmB,KAAKD,KAAL,CAAWC,UAF9B,CAEIA,UAFJ;AAGJ,QAAIC,WAAW,GAAG,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,MAAAA;AAAD,KAAZ;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWM,gBAA/B,EAAiDD,CAAC,EAAlD,EAAqD;AACjD,UAAIE,OAAO,GAAGR,QAAQ,CAACM,CAAD,CAAtB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWQ,QAAvB;;AACA,UAAI,KAAKR,KAAL,CAAWS,YAAf,EAA4B;AACxBP,QAAAA,WAAW,CAACQ,IAAZ,CAAiB;AAAI,UAAA,GAAG,EAAEL,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY;AAAS,UAAA,SAAS,EAAC,WAAnB;AAA+B,UAAA,OAAO,EAAE,MAAM;AAACM,YAAAA,MAAM,CAACC,IAAP,CAAa,OAAO,sBAAP,GAAgCL,OAAO,CAACM,QAAR,EAA7C,EAAkE,OAAlE,EAA2E,sBAA3E;AAAqG,mBAAO,KAAP;AAAc,WAAlK;AAAoK,UAAA,aAAa,EAAE,MAAM;AAACF,YAAAA,MAAM,CAACC,IAAP,CAAa,kDAAkDL,OAAO,CAACM,QAAR,EAA/D,EAAoF,OAApF,EAA6F,sBAA7F;AAAsH,mBAAO,KAAP;AAAc,WAA9T;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAkUN,OAAlU,MAAZ,CAAjB;AACH,OAFD,MAEO;AACHL,QAAAA,WAAW,CAACQ,IAAZ,CAAiB;AAAI,UAAA,GAAG,EAAGL,CAAV;AAAa,UAAA,OAAO,EAAE,MAAM;AAACM,YAAAA,MAAM,CAACC,IAAP,CAAa,OAAO,sBAAP,GAAgCL,OAAO,CAACM,QAAR,EAA7C,EAAkE,OAAlE,EAA2E,sBAA3E;AAAoG,mBAAO,KAAP;AAAc,WAA/I;AAAiJ,UAAA,aAAa,EAAE,MAAM;AAACF,YAAAA,MAAM,CAACC,IAAP,CAAa,kDAAkDL,OAAO,CAACM,QAAR,EAA/D,EAAoF,OAApF,EAA6F,sBAA7F;AAAsH,mBAAO,KAAP;AAAc,WAA3S;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAgTN,OAAhT,MAAjB;AACH;AACJ;;AAED,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACY,MAAhC,EAAwCT,CAAC,EAAzC,EAA4C;AACxCH,MAAAA,WAAW,CAACG,CAAD,CAAX,CAAeU,KAAf,CAAqBC,KAArB,GAA4B;AAACf,QAAAA;AAAD,OAA5B;AACH;;AAED,WAAOC,WAAP;AAEH;;AA9BiD","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { createIFrame } from '../actions';\r\n\r\nexport default class Messages extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            showPopUp: false\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const { messages } = this.props;\r\n        const { fontColour } = this.props.fontColour;\r\n        let messageList = [];\r\n        console.log({fontColour});\r\n        for (var i = 0; i < this.props.numberOfMessages; i++){\r\n            let message = messages[i];\r\n            console.log(this.props.fontType);\r\n            if (this.props.moveMessages){\r\n                messageList.push(<li key={i}><marquee behaviour=\"alternate\" onClick={() => {window.open((\"//\" + \"google.com/search?q=\" + message.toString()), 'popup', 'width=400,height=400' ); return false;}} onContextMenu={() => {window.open((\"https://www.youtube.com/results?search_query=\" + message.toString()), 'popup', 'width=400,height=400'); return false;}}> {message} </marquee></li>);\r\n            } else {\r\n                messageList.push(<li key ={i} onClick={() => {window.open((\"//\" + \"google.com/search?q=\" + message.toString()), 'popup', 'width=400,height=400'); return false;}} onContextMenu={() => {window.open((\"https://www.youtube.com/results?search_query=\" + message.toString()), 'popup', 'width=400,height=400'); return false;}} > {message} </li>);\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < messageList.length; i++){\r\n            messageList[i].style.color= {fontColour};\r\n        }\r\n        \r\n        return messageList;\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}