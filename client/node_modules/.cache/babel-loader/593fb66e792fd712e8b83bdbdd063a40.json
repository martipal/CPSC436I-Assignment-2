{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\MessageList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Messages from './Messages';\nimport { addMessage } from '../actions';\n\nclass MessageList extends React.Component {\n  callAPI() {\n    // promises > timeout\n    fetch(\"http://localhost:9000/messages\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n\n      for (let i = data.length - 1; i >= 0; i--) {\n        this.props.addMessage({\n          \"message\": data[i].message.toString(),\n          \"link\": data[i].link.toString()\n        });\n      }\n    });\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  render() {\n    const header = React.createElement(\"h3\", {\n      className: \"message_log_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" Message Log\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, header, React.createElement(\"ul\", {\n      className: \"message_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Messages, {\n      messages: this.props.messages,\n      numberOfMessages: this.props.numberOfMessages,\n      moveMessages: this.props.scrollingMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addMessage\n})(MessageList);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessageList.js"],"names":["React","connect","Messages","addMessage","MessageList","Component","callAPI","fetch","headers","then","response","json","data","console","log","i","length","props","message","toString","link","componentWillMount","render","header","messages","numberOfMessages","scrollingMessages","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAEtCC,EAAAA,OAAO,GAAG;AACN;AACAC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,kBAAS;AAFJ;AAD2B,KAAnC,CAAL,CAKGC,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAKqCF,IALrC,CAK0CG,IAAI,IAAI;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,WAAK,IAAIG,CAAC,GAAGH,IAAI,CAACI,MAAL,GAAY,CAAzB,EAA4BD,CAAC,IAAG,CAAhC,EAAmCA,CAAC,EAApC,EAAuC;AACnC,aAAKE,KAAL,CAAWd,UAAX,CAAsB;AAAC,qBAAUS,IAAI,CAACG,CAAD,CAAJ,CAAQG,OAAR,CAAgBC,QAAhB,EAAX;AACtB,kBAAOP,IAAI,CAACG,CAAD,CAAJ,CAAQK,IAAR,CAAaD,QAAb;AADe,SAAtB;AAEH;AACJ,KAXD;AAYH;;AAEDE,EAAAA,kBAAkB,GAAE;AAChB,SAAKf,OAAL;AACH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhB;AACA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHA,MADG,EAEJ;AAAI,MAAA,SAAS,EAAE,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,QAA/B;AAAyC,MAAA,gBAAgB,EAAE,KAAKP,KAAL,CAAWQ,gBAAtE;AAAwF,MAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,iBAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFI,CAAR;AAMH;;AA9BqC;;AAiC1C,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHJ,IAAAA,QAAQ,EAAEI,KAAK,CAACJ;AADb,GAAP;AAGH,CAJD;;AAMA,eAAevB,OAAO,CAAC0B,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,WAAzC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Messages from './Messages';\r\nimport { addMessage } from '../actions';\r\n\r\nclass MessageList extends React.Component {\r\n    \r\n    callAPI() {\r\n        // promises > timeout\r\n        fetch(\"http://localhost:9000/messages\", {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                'Accept':'application/json'\r\n            }\r\n        }).then(response => response.json()).then(data => {\r\n            console.log(data);\r\n            for (let i = data.length-1; i >=0; i--){\r\n                this.props.addMessage({\"message\":data[i].message.toString(),\r\n                \"link\":data[i].link.toString()});\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.callAPI();\r\n    }\r\n\r\n    render() {\r\n        const header = (<h3 className=\"message_log_title\"> Message Log</h3>);\r\n        return (<div>\r\n            {header}\r\n            <ul className =\"message_list\">\r\n                <Messages messages={this.props.messages} numberOfMessages={this.props.numberOfMessages} moveMessages={this.props.scrollingMessages} />\r\n            </ul>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addMessage })(MessageList);\r\n"]},"metadata":{},"sourceType":"module"}