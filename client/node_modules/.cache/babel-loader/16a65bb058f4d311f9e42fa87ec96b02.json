{"ast":null,"code":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass MessageList extends React.Component {\n  render() {\n    let ul = document.createAttribute(\"ul\");\n    let startingSize = determineStartingSize(messagesToDisplay);\n\n    for (i = 0; i < this.props.messages.length; i++) {\n      let li = document.createElement(\"li\");\n      li.innerHTML = createInnerLIHTML();\n      formatMessageItem(li);\n      startingSize = startingSize - 4;\n      ul.appendChild(li);\n    }\n\n    return {\n      ul\n    };\n\n    function determineStartingSize() {\n      if (this.props.messages.length > 100) {\n        return 300;\n      }\n\n      return 80;\n    }\n\n    function createInnerLIHTML() {\n      if (moveMessages == true) {\n        return \"<marquee behaviour=\\\"alternate\\\" onmouseover=\\\"this.stop();\\\" onmouseout=\\\"this.start();\\\" scrollamount=16>\" + messages[i] + \"</marquee>\";\n      } else {\n        return messages[i];\n      }\n    }\n\n    function formatMessageItem(li) {\n      li.style.color = randomColour();\n      li.style.fontSize = startingSize + \"px\";\n      li.style.padding = \"0px\";\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps)(MessageList);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessageList.js"],"names":["React","Component","connect","MessageList","render","ul","document","createAttribute","startingSize","determineStartingSize","messagesToDisplay","i","props","messages","length","li","createElement","innerHTML","createInnerLIHTML","formatMessageItem","appendChild","moveMessages","style","color","randomColour","fontSize","padding","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACC,SAAhC,CAAyC;AACrCG,EAAAA,MAAM,GAAE;AACJ,QAAIC,EAAE,GAAGC,QAAQ,CAACC,eAAT,CAAyB,IAAzB,CAAT;AACA,QAAIC,YAAY,GAAGC,qBAAqB,CAACC,iBAAD,CAAxC;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApC,EAA4CH,CAAC,EAA7C,EAAgD;AACxC,UAAII,EAAE,GAAGT,QAAQ,CAACU,aAAT,CAAuB,IAAvB,CAAT;AACAD,MAAAA,EAAE,CAACE,SAAH,GAAeC,iBAAiB,EAAhC;AACAC,MAAAA,iBAAiB,CAACJ,EAAD,CAAjB;AACAP,MAAAA,YAAY,GAAGA,YAAY,GAAG,CAA9B;AACAH,MAAAA,EAAE,CAACe,WAAH,CAAeL,EAAf;AACP;;AAED,WAAQ;AAACV,MAAAA;AAAD,KAAR;;AAEA,aAASI,qBAAT,GAAgC;AAC5B,UAAI,KAAKG,KAAL,CAAWC,QAAX,CAAoBC,MAApB,GAA6B,GAAjC,EAAqC;AACjC,eAAO,GAAP;AACH;;AACD,aAAO,EAAP;AACH;;AAED,aAASI,iBAAT,GAA6B;AACzB,UAAIG,YAAY,IAAI,IAApB,EAA0B;AACtB,eAAO,gHAAgHR,QAAQ,CAACF,CAAD,CAAxH,GAA8H,YAArI;AACH,OAFD,MAEO;AACH,eAAOE,QAAQ,CAACF,CAAD,CAAf;AACH;AACJ;;AAED,aAASQ,iBAAT,CAA2BJ,EAA3B,EAA+B;AAC3BA,MAAAA,EAAE,CAACO,KAAH,CAASC,KAAT,GAAiBC,YAAY,EAA7B;AACAT,MAAAA,EAAE,CAACO,KAAH,CAASG,QAAT,GAAoBjB,YAAY,GAAG,IAAnC;AACAO,MAAAA,EAAE,CAACO,KAAH,CAASI,OAAT,GAAmB,KAAnB;AACH;AACJ;;AAlCoC;;AAqCzC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHf,IAAAA,QAAQ,EAACe,KAAK,CAACf;AADZ,GAAP;AAEH,CAHD;;AAIA,eAAeX,OAAO,CAACyB,eAAD,CAAP,CAAyBxB,WAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass MessageList extends React.Component{\r\n    render(){\r\n        let ul = document.createAttribute(\"ul\");\r\n        let startingSize = determineStartingSize(messagesToDisplay);\r\n        for (i = 0; i < this.props.messages.length; i++){\r\n                let li = document.createElement(\"li\");\r\n                li.innerHTML = createInnerLIHTML();\r\n                formatMessageItem(li);\r\n                startingSize = startingSize - 4;\r\n                ul.appendChild(li);\r\n        }\r\n        \r\n        return ({ul})\r\n\r\n        function determineStartingSize(){\r\n            if (this.props.messages.length > 100){\r\n                return 300;\r\n            }\r\n            return 80;\r\n        }\r\n\r\n        function createInnerLIHTML() {\r\n            if (moveMessages == true) {\r\n                return \"<marquee behaviour=\\\"alternate\\\" onmouseover=\\\"this.stop();\\\" onmouseout=\\\"this.start();\\\" scrollamount=16>\" + messages[i] + \"</marquee>\";\r\n            } else {\r\n                return messages[i];\r\n            }\r\n        }\r\n\r\n        function formatMessageItem(li) {\r\n            li.style.color = randomColour();\r\n            li.style.fontSize = startingSize + \"px\";\r\n            li.style.padding = \"0px\";\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages:state.messages};\r\n}\r\nexport default connect(mapStateToProps)(MessageList);\r\n"]},"metadata":{},"sourceType":"module"}