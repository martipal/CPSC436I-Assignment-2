{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\MessageList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Messages from './Messages';\nimport { addMessage, clearMessages } from '../actions';\n\nclass MessageList extends React.Component {\n  callAPI() {\n    // promises > timeout\n    fetch(\"http://localhost:9000/messages\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      for (let i = data.length - 1; i >= 0; i--) {\n        let link = data[i].link ? data[i].link.toString() : null;\n        this.props.addMessage({\n          \"message\": data[i].message.toString(),\n          \"link\": link\n        });\n      }\n    });\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  getLinkedMessages() {\n    fetch(\"http://localhost:9000/messages/withLinks\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.props.clearMessages();\n\n      for (let i = data.length - 1; i >= 0; i--) {\n        this.props.addMessage({\n          \"message\": data[i].message.toString(),\n          \"link\": data[i].link.toString()\n        });\n      }\n    });\n  }\n\n  render() {\n    const header = React.createElement(\"h3\", {\n      className: \"message_log_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" Message Log\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, header, React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-sm\",\n      onClick: () => this.getLinkedMessages(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Show Only Messages With Links\"), React.createElement(\"ul\", {\n      className: \"message_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Messages, {\n      messages: this.props.messages,\n      numberOfMessages: this.props.numberOfMessages,\n      moveMessages: this.props.scrollingMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addMessage,\n  clearMessages\n})(MessageList);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessageList.js"],"names":["React","connect","Messages","addMessage","clearMessages","MessageList","Component","callAPI","fetch","headers","then","response","json","data","i","length","link","toString","props","message","componentWillMount","getLinkedMessages","console","log","render","header","messages","numberOfMessages","scrollingMessages","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Messages from './Messages';\r\nimport { addMessage, clearMessages } from '../actions';\r\n\r\nclass MessageList extends React.Component {\r\n    \r\n    callAPI() {\r\n        // promises > timeout\r\n        fetch(\"http://localhost:9000/messages\", {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                'Accept':'application/json'\r\n            }\r\n        }).then(response => response.json()).then(data => {\r\n            for (let i = data.length-1; i >=0; i--){\r\n                let link = data[i].link ? data[i].link.toString(): null;\r\n                this.props.addMessage(({\"message\":data[i].message.toString(),\r\n                \"link\":link}));\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.callAPI();\r\n    }\r\n\r\n    getLinkedMessages(){\r\n        fetch(\"http://localhost:9000/messages/withLinks\", {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                'Accept':'application/json'\r\n            }\r\n        }).then(response => response.json()).then(data => {\r\n            console.log(data);\r\n            this.props.clearMessages();\r\n            for (let i = data.length-1; i >=0; i--){\r\n                this.props.addMessage(({\"message\":data[i].message.toString(),\r\n                \"link\":data[i].link.toString()}));\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const header = (<h3 className=\"message_log_title\"> Message Log</h3>);\r\n        return (<div>\r\n            {header}\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.getLinkedMessages()}>Show Only Messages With Links</button>\r\n            <ul className =\"message_list\">\r\n                <Messages messages={this.props.messages} numberOfMessages={this.props.numberOfMessages} moveMessages={this.props.scrollingMessages} />\r\n            </ul>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addMessage, clearMessages })(MessageList);\r\n"]},"metadata":{},"sourceType":"module"}