{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\Messages.js\";\nimport React, { Component } from 'react';\nlet messages = [];\nlet MAX_LIST_LENGTH = 10000;\nlet messagesToDisplay = 10;\nlet displayDefaults = true;\nlet moveMessages = true;\nlet storedMessages = JSON.stringify({\n  \"messages\": [\"Most recently added message\", \"This is a default message.\", \"Is this twitter?\", \"Message 2\", \"Hello!\", \"Is Pluto a planet again?\", \"Yes\", \"@#()!\", \"12345\", \"Oldest message\"]\n});\nexport default class Messages extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(MessageForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(MessageList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass MessageList extends React.Component {\n  renderControls() {\n    return React.createElement(\"div\", {\n      id: \"log_controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"stop_movement\",\n      class: \"button_stuff\",\n      onclick: \"stopMovement();\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" Stop Scroll\"), React.createElement(\"button\", {\n      id: \"expand_button\",\n      class: \"button_stuff\",\n      onclick: \"expandMessages();\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" Expand\"), React.createElement(\"button\", {\n      id: \"collapse_button\",\n      class: \"button_stuff\",\n      onclick: \"collapseMessages();\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" Collapse\"));\n  }\n\n  stopMovement() {\n    let movementButton = document.getElementById(\"stop_movement\");\n\n    if (moveMessages == true) {\n      movementButton.innerHTML = 'Start Scroll';\n      moveMessages = false;\n    } else {\n      movementButton.innerHTML = 'Stop Scroll';\n      moveMessages = true;\n    }\n\n    clearUL();\n    displayMessages();\n  }\n\n  displayMessages() {\n    if (messages.length == 0 && displayDefaults == true) {\n      // Initializes default messages into messages if the page was newly loaded (messages is empty). \n      initializeDisplayedMessagesWithDefaults();\n    }\n\n    displayAvailableMessages();\n  }\n\n  initializeDisplayedMessagesWithDefaults() {\n    let defaultMessages = JSON.parse(storedMessages);\n    messages = messages.concat(defaultMessages.messages);\n  }\n\n  determineStartingSize(messagesToDisplay) {\n    if (messages.length > 80) {\n      return 300;\n    } else {\n      return 50;\n    }\n  }\n\n  randomColour() {\n    return '#' + Math.floor(Math.random() * 16777215).toString(16);\n  }\n\n  displayAvailableMessages() {\n    let ul = document.createElement(\"ul\");\n    let startingSize = determineStartingSize(messagesToDisplay);\n\n    for (var i = 0; i < messagesToDisplay; i++) {\n      if (messages[i]) {\n        let li = document.createElement(\"li\");\n        li.innerHTML = createInnerLIHTML();\n        formatMessageItem(li);\n        startingSize = startingSize - 4;\n        ul.appendChild(li);\n      }\n    }\n\n    function formatMessageItem(li) {\n      li.style.color = randomColour();\n      li.style.fontSize = startingSize + \"px\";\n      li.style.padding = \"0px\";\n    }\n\n    function createInnerLIHTML() {\n      if (moveMessages == true) {\n        return \"<marquee behaviour=\\\"alternate\\\" onmouseover=\\\"this.stop();\\\" onmouseout=\\\"this.start();\\\" scrollamount=16>\" + messages[i] + \"</marquee>\";\n      } else {\n        return messages[i];\n      }\n    }\n\n    return ul;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"displayAvailableMessages() renderControls()\");\n  }\n\n}\n\nclass MessageForm extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"form\",\n      onsubmit: \"addText(this.text.value); return false;\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"input_field\",\n      name: \"text\",\n      type: \"text\",\n      value: \"Insert Message Here...\",\n      onfocus: \"if (this.value == 'Insert Message Here...') {this.value = '';}\",\n      size: \"36\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"add\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"reset\",\n      class: \"button_stuff\",\n      value: \"Clear Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"clear_button\",\n      class: \"button_stuff\",\n      onclick: \"clearTextLog(); return false;\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Clear Message Log\")));\n  }\n\n  addText(textInput) {\n    document.getElementById(\"form\").reset();\n\n    if (textInput !== \"Insert Message Here...\") {\n      messages.unshift(textInput);\n      clearUL();\n      displayMessages();\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\Messages.js"],"names":["React","Component","messages","MAX_LIST_LENGTH","messagesToDisplay","displayDefaults","moveMessages","storedMessages","JSON","stringify","Messages","render","MessageList","renderControls","stopMovement","movementButton","document","getElementById","innerHTML","clearUL","displayMessages","length","initializeDisplayedMessagesWithDefaults","displayAvailableMessages","defaultMessages","parse","concat","determineStartingSize","randomColour","Math","floor","random","toString","ul","createElement","startingSize","i","li","createInnerLIHTML","formatMessageItem","appendChild","style","color","fontSize","padding","MessageForm","addText","textInput","reset","unshift"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nlet messages = [];\r\n\r\nlet MAX_LIST_LENGTH = 10000;\r\n\r\nlet messagesToDisplay = 10;\r\n\r\nlet displayDefaults = true;\r\n\r\nlet moveMessages = true;\r\n\r\nlet storedMessages = JSON.stringify({\r\n    \"messages\": [\"Most recently added message\",\r\n        \"This is a default message.\",\r\n        \"Is this twitter?\",\r\n        \"Message 2\", \"Hello!\",\r\n        \"Is Pluto a planet again?\",\r\n        \"Yes\",\r\n        \"@#()!\",\r\n        \"12345\",\r\n        \"Oldest message\"]\r\n});\r\n\r\nexport default class Messages extends React.Component{\r\n    \r\n    render(){\r\n        return (<div><MessageForm/>\r\n            <MessageList/></div>);\r\n    }\r\n}\r\n\r\nclass MessageList extends React.Component{\r\n\r\n    renderControls(){\r\n       return  (<div id=\"log_controls\">\r\n      <button id=\"stop_movement\" class=\"button_stuff\" onclick=\"stopMovement();\"> Stop Scroll\r\n      </button>\r\n      <button id=\"expand_button\" class=\"button_stuff\" onclick=\"expandMessages();\"> Expand\r\n      </button>\r\n      <button id=\"collapse_button\" class=\"button_stuff\" onclick=\"collapseMessages();\"> Collapse\r\n      </button>\r\n    </div>);\r\n    }\r\n\r\n    stopMovement() {\r\n        let movementButton = document.getElementById(\"stop_movement\");\r\n        if (moveMessages == true) {\r\n            movementButton.innerHTML = 'Start Scroll';\r\n            moveMessages = false;\r\n        } else {\r\n            movementButton.innerHTML = 'Stop Scroll';\r\n            moveMessages = true;\r\n        }\r\n        clearUL();\r\n        displayMessages();\r\n    }\r\n\r\n    displayMessages() {\r\n        if (messages.length == 0 && displayDefaults == true) {\r\n            // Initializes default messages into messages if the page was newly loaded (messages is empty). \r\n            initializeDisplayedMessagesWithDefaults();\r\n        }\r\n    \r\n        displayAvailableMessages();\r\n    }\r\n\r\n    initializeDisplayedMessagesWithDefaults() {\r\n        let defaultMessages = JSON.parse(storedMessages);\r\n        messages = messages.concat(defaultMessages.messages);\r\n    }\r\n    \r\n    determineStartingSize(messagesToDisplay) {\r\n        if (messages.length > 80) {\r\n            return 300;\r\n        } else {\r\n            return 50;\r\n        }\r\n    }\r\n    \r\n    randomColour() {\r\n        return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n    }\r\n\r\n    displayAvailableMessages() {\r\n        let ul = document.createElement(\"ul\");\r\n        let startingSize = determineStartingSize(messagesToDisplay);\r\n        for (var i = 0; i < messagesToDisplay; i++) {\r\n            if (messages[i]) {\r\n                let li = document.createElement(\"li\");\r\n                li.innerHTML = createInnerLIHTML();\r\n                formatMessageItem(li);\r\n                startingSize = startingSize - 4;\r\n                ul.appendChild(li);\r\n            }\r\n        }\r\n    \r\n        function formatMessageItem(li) {\r\n            li.style.color = randomColour();\r\n            li.style.fontSize = startingSize + \"px\";\r\n            li.style.padding = \"0px\";\r\n        }\r\n    \r\n        function createInnerLIHTML() {\r\n            if (moveMessages == true) {\r\n                return \"<marquee behaviour=\\\"alternate\\\" onmouseover=\\\"this.stop();\\\" onmouseout=\\\"this.start();\\\" scrollamount=16>\" + messages[i] + \"</marquee>\";\r\n            } else {\r\n                return messages[i];\r\n            }\r\n        }\r\n\r\n        return ul;\r\n    }\r\n\r\n    render(){\r\n        return (<div>\r\n                displayAvailableMessages()\r\n                renderControls()\r\n        </div>)\r\n    }\r\n}\r\n\r\nclass MessageForm extends React.Component{\r\n    render(){\r\n        return (<div>\r\n      <form id=\"form\" onsubmit=\"addText(this.text.value); return false;\">\r\n        <label>\r\n          <input id=\"input_field\" name=\"text\" type=\"text\" value=\"Insert Message Here...\"\r\n            onfocus=\"if (this.value == 'Insert Message Here...') {this.value = '';}\" size=\"36\" />\r\n\r\n        </label>\r\n        <br />\r\n        <input id=\"add\" type=\"submit\" value=\"Submit\" />\r\n        <input type=\"reset\" class=\"button_stuff\" value=\"Clear Form\" />\r\n        <button id=\"clear_button\" class=\"button_stuff\" onclick=\"clearTextLog(); return false;\">Clear Message Log\r\n        </button>\r\n      </form>\r\n    </div>);\r\n    }\r\n\r\n    addText(textInput) {\r\n        document.getElementById(\"form\").reset();\r\n    \r\n        if (textInput !== \"Insert Message Here...\") {\r\n            messages.unshift(textInput);\r\n            clearUL();\r\n            displayMessages();\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}