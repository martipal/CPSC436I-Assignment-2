{"ast":null,"code":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nconst startingSize = 100;\n\nclass MessageList extends React.Component {\n  render() {\n    console.log(this.props);\n    let ul = document.createAttribute(\"ul\");\n    let messages = this.props.messages;\n    let messagesLength = this.props.messagesLength;\n    let startingSize = determineStartingSize(messagesLength);\n\n    for (var i = 0; i < messagesLength; i++) {\n      let li = document.createElement(\"li\");\n      li.innerHTML = createInnerLIHTML(i);\n      formatMessageItem(li);\n      startingSize = startingSize - 4;\n      ul.appendChild(li);\n    }\n\n    return {\n      ul\n    };\n  }\n\n}\n\nfunction determineStartingSize(messagesLength) {\n  if (messagesLength > 100) {\n    return 300;\n  }\n\n  return 80;\n}\n\nfunction createInnerLIHTML(i) {\n  if (this.props.scrollingMessages === true) {\n    return \"<marquee behaviour=\\\"alternate\\\" onmouseover=\\\"this.stop();\\\" onmouseout=\\\"this.start();\\\" scrollamount=16>\" + this.props.messages[i] + \"</marquee>\";\n  } else {\n    return this.props.messages[i];\n  }\n}\n\nfunction formatMessageItem(li) {\n  li.style.color = '#' + Math.floor(Math.random() * 16777215).toString(16);\n  li.style.fontSize = startingSize + \"px\";\n  li.style.padding = \"0px\";\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages,\n    messagesLength: state.messages.length\n  };\n};\n\nexport default connect(mapStateToProps, {})(MessageList);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessageList.js"],"names":["React","Component","connect","startingSize","MessageList","render","console","log","props","ul","document","createAttribute","messages","messagesLength","determineStartingSize","i","li","createElement","innerHTML","createInnerLIHTML","formatMessageItem","appendChild","scrollingMessages","style","color","Math","floor","random","toString","fontSize","padding","mapStateToProps","state","length"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,YAAY,GAAG,GAArB;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACC,SAAhC,CAA0C;AAGtCI,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,QAAIC,EAAE,GAAGC,QAAQ,CAACC,eAAT,CAAyB,IAAzB,CAAT;AACA,QAAIC,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA1B;AACA,QAAIC,cAAc,GAAG,KAAKL,KAAL,CAAWK,cAAhC;AACA,QAAIV,YAAY,GAAGW,qBAAqB,CAACD,cAAD,CAAxC;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,cAApB,EAAoCE,CAAC,EAArC,EAAyC;AACrC,UAAIC,EAAE,GAAGN,QAAQ,CAACO,aAAT,CAAuB,IAAvB,CAAT;AACAD,MAAAA,EAAE,CAACE,SAAH,GAAeC,iBAAiB,CAACJ,CAAD,CAAhC;AACAK,MAAAA,iBAAiB,CAACJ,EAAD,CAAjB;AACAb,MAAAA,YAAY,GAAGA,YAAY,GAAG,CAA9B;AACAM,MAAAA,EAAE,CAACY,WAAH,CAAeL,EAAf;AACH;;AAED,WAAQ;AAAEP,MAAAA;AAAF,KAAR;AACH;;AAnBqC;;AAsB1C,SAASK,qBAAT,CAA+BD,cAA/B,EAA+C;AAC3C,MAAIA,cAAc,GAAG,GAArB,EAA0B;AACtB,WAAO,GAAP;AACH;;AACD,SAAO,EAAP;AACH;;AAED,SAASM,iBAAT,CAA2BJ,CAA3B,EAA8B;AAC1B,MAAI,KAAKP,KAAL,CAAWc,iBAAX,KAAiC,IAArC,EAA2C;AACvC,WAAO,gHAAgH,KAAKd,KAAL,CAAWI,QAAX,CAAoBG,CAApB,CAAhH,GAAyI,YAAhJ;AACH,GAFD,MAEO;AACH,WAAO,KAAKP,KAAL,CAAWI,QAAX,CAAoBG,CAApB,CAAP;AACH;AACJ;;AAED,SAASK,iBAAT,CAA2BJ,EAA3B,EAA+B;AAC3BA,EAAAA,EAAE,CAACO,KAAH,CAASC,KAAT,GAAiB,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAvB;AACAZ,EAAAA,EAAE,CAACO,KAAH,CAASM,QAAT,GAAoB1B,YAAY,GAAG,IAAnC;AACAa,EAAAA,EAAE,CAACO,KAAH,CAASO,OAAT,GAAmB,KAAnB;AACH;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHpB,IAAAA,QAAQ,EAAEoB,KAAK,CAACpB,QADb;AAEHC,IAAAA,cAAc,EAAEmB,KAAK,CAACpB,QAAN,CAAeqB;AAF5B,GAAP;AAIH,CALD;;AAOA,eAAe/B,OAAO,CAAC6B,eAAD,EAAkB,EAAlB,CAAP,CAA6B3B,WAA7B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst startingSize = 100;\r\n\r\nclass MessageList extends React.Component {\r\n   \r\n\r\n    render() {\r\n        console.log(this.props);\r\n        let ul = document.createAttribute(\"ul\");\r\n        let messages = this.props.messages;\r\n        let messagesLength = this.props.messagesLength;\r\n        let startingSize = determineStartingSize(messagesLength);\r\n        \r\n        for (var i = 0; i < messagesLength; i++) {\r\n            let li = document.createElement(\"li\");\r\n            li.innerHTML = createInnerLIHTML(i);\r\n            formatMessageItem(li);\r\n            startingSize = startingSize - 4;\r\n            ul.appendChild(li);\r\n        }\r\n\r\n        return ({ ul });\r\n    }\r\n}\r\n\r\nfunction determineStartingSize(messagesLength) {\r\n    if (messagesLength > 100) {\r\n        return 300;\r\n    }\r\n    return 80;\r\n}\r\n\r\nfunction createInnerLIHTML(i) {\r\n    if (this.props.scrollingMessages === true) {\r\n        return \"<marquee behaviour=\\\"alternate\\\" onmouseover=\\\"this.stop();\\\" onmouseout=\\\"this.start();\\\" scrollamount=16>\" + this.props.messages[i] + \"</marquee>\";\r\n    } else {\r\n        return this.props.messages[i];\r\n    }\r\n}\r\n\r\nfunction formatMessageItem(li) {\r\n    li.style.color = '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n    li.style.fontSize = startingSize + \"px\";\r\n    li.style.padding = \"0px\";\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages,\r\n        messagesLength: state.messages.length\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(MessageList);\r\n"]},"metadata":{},"sourceType":"module"}