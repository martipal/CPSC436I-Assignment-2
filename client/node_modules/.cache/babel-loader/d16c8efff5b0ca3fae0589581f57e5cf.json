{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\Messages.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createIFrame } from '../actions';\n\nclass Messages extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showPopUp: false\n    };\n  }\n\n  createAndStoreIFrame(event) {\n    let url = (\"//\" + \"google.com/search?q=\" + event.target.value.toString(), '_blank');\n    this.props.createIFrame(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"iframe\", {\n      src: url,\n      height: \"300\",\n      width: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    const messages = this.props.messages;\n    console.log(messages);\n    let messageList = [];\n    console.log(this.props.numberOfMessages);\n\n    for (var i = 0; i < this.props.numberOfMessages; i++) {\n      let message = messages[i];\n\n      if (this.props.moveMessages) {\n        messageList.push(React.createElement(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"marquee\", {\n          behaviour: \"alternate\",\n          onMouseOver: this.stop,\n          onMouseOut: this.start,\n          onClick: this.createAndStoreIFrame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \" \", message, \" \")));\n      } else {\n        messageList.push(React.createElement(\"li\", {\n          key: i,\n          onClick: this.createAndStoreIFrame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \" \", message, \" \"));\n      }\n    }\n\n    return messageList;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    link: state.link\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createIFrame\n})(Messages);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\Messages.js"],"names":["React","Component","connect","createIFrame","Messages","constructor","state","showPopUp","createAndStoreIFrame","event","url","target","value","toString","props","render","messages","console","log","messageList","numberOfMessages","i","message","moveMessages","push","stop","start","mapStateToProps","link"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACC,SAA7B,CAAuC;AAEnCI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAEDC,EAAAA,oBAAoB,CAACC,KAAD,EAAO;AACvB,QAAIC,GAAG,IAAG,OAAO,sBAAP,GAAgCD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,QAAnB,EAAhC,EAA+D,QAAlE,CAAP;AACA,SAAKC,KAAL,CAAWX,YAAX,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAGO,GAAd;AAAmB,MAAA,MAAM,EAAC,KAA1B;AAAgC,MAAA,KAAK,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAEDK,EAAAA,MAAM,GAAE;AAAA,UACIC,QADJ,GACiB,KAAKF,KADtB,CACIE,QADJ;AAEJC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAIG,WAAW,GAAG,EAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWM,gBAAvB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKP,KAAL,CAAWM,gBAA/B,EAAiDC,CAAC,EAAlD,EAAqD;AACjD,UAAIC,OAAO,GAAGN,QAAQ,CAACK,CAAD,CAAtB;;AACA,UAAI,KAAKP,KAAL,CAAWS,YAAf,EAA4B;AACxBJ,QAAAA,WAAW,CAACK,IAAZ,CAAiB;AAAI,UAAA,GAAG,EAAEH,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY;AAAS,UAAA,SAAS,EAAC,WAAnB;AAA+B,UAAA,WAAW,EAAE,KAAKI,IAAjD;AAAuD,UAAA,UAAU,EAAE,KAAKC,KAAxE;AAA+E,UAAA,OAAO,EAAE,KAAKlB,oBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAqHc,OAArH,MAAZ,CAAjB;AACH,OAFD,MAEO;AACHH,QAAAA,WAAW,CAACK,IAAZ,CAAiB;AAAI,UAAA,GAAG,EAAGH,CAAV;AAAa,UAAA,OAAO,EAAG,KAAKb,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAoDc,OAApD,MAAjB;AACH;AACJ;;AAED,WAAOH,WAAP;AAEH;;AAlCkC;;AAqCvC,MAAMQ,eAAe,GAAIrB,KAAD,IAAW;AAC/B,SAAO;AACHsB,IAAAA,IAAI,EAAEtB,KAAK,CAACsB;AADT,GAAP;AAGH,CAJD;;AAMA,eAAe1B,OAAO,CAACyB,eAAD,EAAkB;AAACxB,EAAAA;AAAD,CAAlB,CAAP,CAAyCC,QAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { createIFrame } from '../actions';\r\n\r\nclass Messages extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            showPopUp: false\r\n        };\r\n    }\r\n\r\n    createAndStoreIFrame(event){\r\n        let url =(\"//\" + \"google.com/search?q=\" + event.target.value.toString(), '_blank');\r\n        this.props.createIFrame(\r\n            <div>\r\n                <iframe src ={url} height=\"300\" width=\"300\"/> \r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        const { messages } = this.props;\r\n        console.log(messages);\r\n        let messageList = [];\r\n        console.log(this.props.numberOfMessages);\r\n        for (var i = 0; i < this.props.numberOfMessages; i++){\r\n            let message = messages[i];\r\n            if (this.props.moveMessages){\r\n                messageList.push(<li key={i}><marquee behaviour=\"alternate\" onMouseOver={this.stop} onMouseOut={this.start} onClick={this.createAndStoreIFrame}> {message} </marquee></li>);\r\n            } else {\r\n                messageList.push(<li key ={i} onClick={ this.createAndStoreIFrame}> {message} </li>);\r\n            }\r\n        }\r\n        \r\n        return messageList;\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        link: state.link\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {createIFrame})(Messages);"]},"metadata":{},"sourceType":"module"}