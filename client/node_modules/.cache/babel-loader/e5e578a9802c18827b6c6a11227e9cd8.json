{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\MessageForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addMessage } from '../actions';\n\nclass MessageForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let newMessage = event.target.text.value.toString();\n    let website = event.target.onClickSite.value.toString();\n    let messageLink = createMessageLink(newMessage, website);\n    sendMessageWithPOST(newMessage, messageLink);\n    reload();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"input_field\",\n      ref: input => this.inputField = input,\n      name: \"text\",\n      type: \"text\",\n      defaultValue: \"Insert Message Here...\",\n      onFocus: () => this.inputField.value = \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      id: \"select_site\",\n      name: \"onClickSite\",\n      defaultValue: \"Select clickable link option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Link message to...\"), React.createElement(\"option\", {\n      value: \"google\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Google\"), React.createElement(\"option\", {\n      value: \"urbandictionary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Urban Dictionary\"), React.createElement(\"option\", {\n      value: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Youtube\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"add\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"reset\",\n      className: \"button_stuff\",\n      value: \"Clear Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      id: \"clear_button\",\n      className: \"button_stuff\",\n      onClick: () => clearMessages(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Clear Message Log\"));\n  }\n\n}\n\nfunction createMessageLink(message, website) {\n  switch (website) {\n    case \"\":\n      return \"\";\n\n    case \"youtube\":\n      return \"https://www.youtube.com/results?search_query=\" + message.toString();\n\n    case \"google\":\n      return \"//\" + \"google.com/search?q=\" + message.toString();\n\n    case \"urbandictionary\":\n      return \"https://www.urbandictionary.com/define.php?term=\" + message.toString();\n  }\n}\n\nfunction clearMessages() {\n  const options = {\n    method: 'POST'\n  };\n  fetch(\"http://localhost:9000/messages/clearAll\", options);\n  reload();\n}\n\nfunction reload() {\n  window.location.reload();\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nfunction sendMessageWithPOST(newMessage, messageLink) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"message\": newMessage,\n      \"link\": messageLink\n    })\n  };\n  fetch(\"http://localhost:9000/messages\", options);\n}\n\nexport default connect(mapStateToProps, {\n  addMessage\n})(MessageForm);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessageForm.js"],"names":["React","connect","addMessage","MessageForm","Component","constructor","props","handleSubmit","bind","event","preventDefault","newMessage","target","text","value","toString","website","onClickSite","messageLink","createMessageLink","sendMessageWithPOST","reload","render","input","inputField","clearMessages","message","options","method","fetch","window","location","mapStateToProps","state","messages","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMessage } from '../actions';\r\n\r\nclass MessageForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let newMessage = event.target.text.value.toString();\r\n        let website = event.target.onClickSite.value.toString();\r\n        let messageLink = createMessageLink(newMessage, website);\r\n        sendMessageWithPOST(newMessage, messageLink);\r\n        reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form id=\"form\" onSubmit={this.handleSubmit}>\r\n                    <label>\r\n\r\n                        <input id=\"input_field\" ref={input => this.inputField = input} name=\"text\" type=\"text\" defaultValue=\"Insert Message Here...\" onFocus={() => this.inputField.value = \"\"} />\r\n                    </label>\r\n                    <select id=\"select_site\" name=\"onClickSite\" defaultValue=\"Select clickable link option\">\r\n                        <option value=\"\">Link message to...</option>\r\n                        <option value=\"google\">Google</option>\r\n                        <option value=\"urbandictionary\">Urban Dictionary</option>\r\n                        <option value=\"youtube\">Youtube</option>\r\n                    </select>\r\n                    <br />\r\n                    <input id=\"add\" type=\"submit\" value=\"Submit\" />\r\n                    <input type=\"reset\" className=\"button_stuff\" value=\"Clear Form\" />\r\n                </form>\r\n                <button id=\"clear_button\" className=\"button_stuff\" onClick={() => clearMessages()}>Clear Message Log\r\n        </button>\r\n            </div>);\r\n    }\r\n\r\n}\r\n\r\nfunction createMessageLink(message, website) {\r\n    switch (website) {\r\n        case \"\":\r\n            return \"\";\r\n        case \"youtube\":\r\n            return \"https://www.youtube.com/results?search_query=\" + message.toString();\r\n        case \"google\":\r\n            return \"//\" + \"google.com/search?q=\" + message.toString();\r\n        case \"urbandictionary\":\r\n            return \"https://www.urbandictionary.com/define.php?term=\" + message.toString();\r\n    }\r\n}\r\n\r\nfunction clearMessages() {\r\n    const options = {\r\n        method: 'POST'\r\n    };\r\n    fetch(\"http://localhost:9000/messages/clearAll\", options);\r\n    reload();\r\n}\r\n\r\nfunction reload() {\r\n    window.location.reload();\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages\r\n    }\r\n}\r\n\r\nfunction sendMessageWithPOST(newMessage, messageLink) {\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"message\": newMessage,\r\n            \"link\": messageLink})\r\n    };\r\n\r\n    fetch(\"http://localhost:9000/messages\", options);\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { addMessage })(MessageForm);"]},"metadata":{},"sourceType":"module"}