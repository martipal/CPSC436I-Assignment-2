{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\MessageForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addMessage, clearMessages } from '../actions';\n\nclass MessageForm extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let newMessage = event.target.text.value.toString();\n    let link = event.target.link.value.toString();\n    this.sendMessageWithPOST(JSON.stringify({\n      \"message\": newMessage,\n      \"link\": link\n    }));\n    this.reload();\n  }\n\n  reload() {\n    this.props.update();\n  }\n\n  clearMessages() {\n    // make these calls asynchronous - \n    const options = {\n      method: 'DELETE'\n    };\n    fetch(\"http://localhost:9000/messages/clearAll\", options).then(response => response.json()).then(data => {\n      if (data === \"deleted\") {\n        this.props.clearMessages();\n        console.log(data);\n      }\n    });\n  }\n\n  sendMessageWithPOST(newMessage) {\n    console.log(newMessage);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"message\": newMessage\n      })\n    };\n    fetch(\"http://localhost:9000/messages\", options).then(response => response.json()).then(data => {\n      this.props.addMessage(data.message);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \".form-horizontal\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"input_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input_field\",\n      ref: input => this.inputField = input,\n      name: \"text\",\n      type: \"text\",\n      defaultValue: \"Insert Message Here...\",\n      onFocus: () => this.inputField.value = \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Google\",\n      default: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Google\"), React.createElement(\"option\", {\n      value: \"Youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"YouTube\"), React.createElement(\"option\", {\n      value: \"UrbanDictionary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"UrbanDictionary\")), React.createElement(\"input\", {\n      className: \"btn btn-secondary btn-sm btn-block\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"reset\",\n      className: \"btn btn-secondary btn-sm btn-block\",\n      value: \"Clear Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"clear_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-sm btn-block\",\n      onClick: () => this.clearMessages(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Clear Message Log\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addMessage,\n  clearMessages\n})(MessageForm);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessageForm.js"],"names":["React","connect","addMessage","clearMessages","MessageForm","Component","constructor","handleSubmit","bind","event","preventDefault","newMessage","target","text","value","toString","link","sendMessageWithPOST","JSON","stringify","reload","props","update","options","method","fetch","then","response","json","data","console","log","headers","body","message","render","input","inputField","mapStateToProps","state","messages"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMessage, clearMessages } from '../actions';\r\n\r\nclass MessageForm extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let newMessage = event.target.text.value.toString();\r\n        let link = event.target.link.value.toString();\r\n        this.sendMessageWithPOST(JSON.stringify({\"message\":\r\n            newMessage,\r\n            \"link\":link}));\r\n        this.reload();\r\n    }\r\n\r\n    reload() {\r\n        this.props.update();\r\n    }\r\n\r\n    clearMessages() {\r\n        // make these calls asynchronous - \r\n        const options = {\r\n            method: 'DELETE'\r\n        };\r\n\r\n        fetch(\"http://localhost:9000/messages/clearAll\", options).then(response => response.json()).then(data => {\r\n            if (data === \"deleted\"){\r\n                this.props.clearMessages();\r\n                console.log(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessageWithPOST(newMessage) {\r\n        console.log(newMessage);\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"message\": newMessage })\r\n    };\r\n\r\n    fetch(\"http://localhost:9000/messages\", options).then(response => response.json()).then(data => {\r\n        this.props.addMessage(data.message);\r\n    });\r\n}\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\".form-horizontal\" onSubmit={this.handleSubmit}>\r\n                    <label className=\"input_label\">\r\n\r\n                        <input className=\"input_field\" ref={input => this.inputField = input} name=\"text\" type=\"text\" defaultValue=\"Insert Message Here...\" onFocus={() => this.inputField.value = \"\"} />\r\n                    </label>\r\n                    <br />\r\n                    <select name=\"message\">\r\n    <option value=\"Google\" default>Google</option>\r\n    <option value=\"Youtube\">YouTube</option>\r\n    <option value=\"UrbanDictionary\">UrbanDictionary</option>\r\n  </select>\r\n                    <input className=\"btn btn-secondary btn-sm btn-block\" type=\"submit\" value=\"Submit\" />\r\n                    <input type=\"reset\" className=\"btn btn-secondary btn-sm btn-block\" value=\"Clear Form\" />\r\n                </form>\r\n                <div className=\"clear_button\">\r\n                    <button className=\"btn btn-secondary btn-sm btn-block\" onClick={() => this.clearMessages()}>Clear Message Log\r\n        </button>\r\n                </div>\r\n            </div>);\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addMessage, clearMessages })(MessageForm);"]},"metadata":{},"sourceType":"module"}