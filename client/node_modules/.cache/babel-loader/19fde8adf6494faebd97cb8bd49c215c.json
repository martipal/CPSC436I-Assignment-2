{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\MessagesPage.js\";\nimport React from 'react';\nimport MessageForm from './MessageForm';\nimport MessageList from './MessageList';\nlet fontType = [\"Arial\", \"Verdana\", \"Helvetica\", \"Calibri\", \"Candara\", \"Century Gothic\", \"Trebuchet MS\", \"Copperplate\", \"Impact\"];\nexport default class MessagesPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      numberOfMessagesDisplayed: 10,\n      scrollingMessages: true,\n      fontType: \"Arial\"\n    };\n    this._collapseMessages = this._collapseMessages.bind(this);\n    this._expandMessages = this._expandMessages.bind(this);\n    this._toggleScroll = this._toggleScroll.bind(this);\n  }\n\n  _collapseMessages() {\n    this.setState({\n      numberOfMessagesDisplayed: 10\n    });\n  }\n\n  _expandMessages() {\n    this.setState({\n      numberOfMessagesDisplayed: 100\n    });\n  }\n\n  _toggleScroll() {\n    if (this.state.scrollingMessages) {\n      this.setState({\n        scrollingMessages: false\n      });\n    } else {\n      this.setState({\n        scrollingMessages: true\n      });\n    }\n  }\n\n  _randomizeFont() {\n    let num = Math.floor(Math.random() * 9);\n    let newFont = fontType[num];\n    this.setState({\n      fontType: {\n        newFont\n      }\n    });\n  }\n\n  render() {\n    let scrollButton;\n\n    if (this.state.scrollingMessages) {\n      scrollButton = React.createElement(\"button\", {\n        id: \"stop_movement\",\n        className: \"button_stuff\",\n        onClick: this._toggleScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" Stop Scroll\");\n    } else {\n      scrollButton = React.createElement(\"button\", {\n        id: \"stop_movement\",\n        className: \"button_stuff\",\n        onClick: this._toggleScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" Resume Scroll\");\n    }\n\n    let expandCollapseButton;\n\n    if (this.state.numberOfMessagesDisplayed === 10) {\n      expandCollapseButton = React.createElement(\"button\", {\n        id: \"expand_button\",\n        className: \"button_stuff\",\n        onClick: this._expandMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" Expand\");\n    } else {\n      expandCollapseButton = React.createElement(\"button\", {\n        id: \"collapse_button\",\n        className: \"button_stuff\",\n        onClick: this._collapseMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" Collapse\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(MessageForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(MessageList, {\n      numberOfMessages: this.state.numberOfMessagesDisplayed,\n      scrollingMessages: this.state.scrollingMessages,\n      font: this.state.fontType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, scrollButton, expandCollapseButton, React.createElement(\"button\", {\n      className: \"button_stuff\",\n      onClick: this._randomizeFont,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" Random Font\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessagesPage.js"],"names":["React","MessageForm","MessageList","fontType","MessagesPage","Component","constructor","state","numberOfMessagesDisplayed","scrollingMessages","_collapseMessages","bind","_expandMessages","_toggleScroll","setState","_randomizeFont","num","Math","floor","random","newFont","render","scrollButton","expandCollapseButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MessageForm from './MessageForm';\r\nimport MessageList from './MessageList';\r\n\r\nlet fontType = [ \"Arial\", \"Verdana\", \"Helvetica\", \"Calibri\", \"Candara\", \"Century Gothic\", \"Trebuchet MS\", \"Copperplate\", \"Impact\"];\r\n\r\nexport default class MessagesPage extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            numberOfMessagesDisplayed: 10,\r\n            scrollingMessages: true,\r\n            fontType: \"Arial\"\r\n        };\r\n        this._collapseMessages = this._collapseMessages.bind(this);\r\n        this._expandMessages = this._expandMessages.bind(this);\r\n        this._toggleScroll = this._toggleScroll.bind(this);\r\n    }\r\n\r\n    _collapseMessages() {\r\n        this.setState({ numberOfMessagesDisplayed: 10 });\r\n    }\r\n\r\n    _expandMessages() {\r\n        this.setState({ numberOfMessagesDisplayed: 100 });\r\n    }\r\n\r\n    _toggleScroll() {\r\n        if (this.state.scrollingMessages){\r\n        this.setState({ scrollingMessages: false });\r\n        } else {\r\n            this.setState({ scrollingMessages: true });\r\n        }\r\n    }\r\n\r\n    _randomizeFont(){\r\n        let num = Math.floor(Math.random()*9);\r\n        let newFont = fontType[num];\r\n        this.setState({fontType: {newFont}});\r\n    }\r\n\r\n    render() {\r\n        let scrollButton;\r\n\r\n        if (this.state.scrollingMessages){\r\n            scrollButton = (<button id=\"stop_movement\" className=\"button_stuff\" onClick={this._toggleScroll}> Stop Scroll\r\n            </button>);\r\n        } else {\r\n            scrollButton = (<button id=\"stop_movement\" className=\"button_stuff\" onClick={this._toggleScroll}> Resume Scroll\r\n            </button>);\r\n        }\r\n\r\n        let expandCollapseButton;\r\n        if (this.state.numberOfMessagesDisplayed === 10){\r\n            expandCollapseButton = (<button id=\"expand_button\" className=\"button_stuff\" onClick={this._expandMessages}> Expand</button>);\r\n        } else {\r\n            expandCollapseButton = (<button id=\"collapse_button\" className=\"button_stuff\" onClick={this._collapseMessages}> Collapse</button>);\r\n        }\r\n\r\n        return (<div>\r\n            <MessageForm />\r\n            <hr></hr>\r\n            <MessageList numberOfMessages={this.state.numberOfMessagesDisplayed} scrollingMessages={this.state.scrollingMessages} font={this.state.fontType}/>\r\n            <div>\r\n                {scrollButton}\r\n                {expandCollapseButton}\r\n                <button className=\"button_stuff\" onClick={this._randomizeFont}> Random Font</button>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}