{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\MessageList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Messages from './Messages';\nimport { addMessage } from '../actions';\n\nclass MessageList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponseMessages: \"ds\"\n    };\n  }\n\n  callAPI() {\n    let response = fetch(\"http://localhost:9000/messages\").then(response => response.json()).then(data => {\n      for (let i = data.length; i >= 0; i--) {\n        this.props.addMessage(data[i].message);\n      }\n    });\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  render() {\n    const header = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" Message Log\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, header, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Messages, {\n      messages: this.props.messages,\n      numberOfMessages: this.props.numberOfMessages,\n      moveMessages: this.props.scrollingMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addMessage\n})(MessageList);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessageList.js"],"names":["React","connect","Messages","addMessage","MessageList","Component","constructor","props","state","apiResponseMessages","callAPI","response","fetch","then","json","data","i","length","message","componentWillMount","render","header","messages","numberOfMessages","scrollingMessages","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,mBAAmB,EAAE;AAAvB,KAAb;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACN,QAAIC,QAAQ,GAAGC,KAAK,CAAC,gCAAD,CAAL,CAAwCC,IAAxC,CAA6CF,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EAAzD,EAA0ED,IAA1E,CAA+EE,IAAI,IAAI;AAClG,WAAK,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAlB,EAA0BD,CAAC,IAAG,CAA9B,EAAiCA,CAAC,EAAlC,EAAqC;AACjC,aAAKT,KAAL,CAAWJ,UAAX,CAAsBY,IAAI,CAACC,CAAD,CAAJ,CAAQE,OAA9B;AACH;AACJ,KAJc,CAAf;AAKH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKT,OAAL;AACH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhB;AACA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHA,MADG,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWe,QAA/B;AAAyC,MAAA,gBAAgB,EAAE,KAAKf,KAAL,CAAWgB,gBAAtE;AAAwF,MAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWiB,iBAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFI,CAAR;AAMH;;AA3BqC;;AA8B1C,MAAMC,eAAe,GAAIjB,KAAD,IAAW;AAC/B,SAAO;AACHc,IAAAA,QAAQ,EAAEd,KAAK,CAACc;AADb,GAAP;AAGH,CAJD;;AAMA,eAAerB,OAAO,CAACwB,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,WAAzC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Messages from './Messages';\r\nimport { addMessage } from '../actions';\r\n\r\nclass MessageList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { apiResponseMessages: \"ds\" };\r\n    }\r\n\r\n    callAPI() {\r\n        let response = fetch(\"http://localhost:9000/messages\").then(response => response.json()).then(data => {\r\n            for (let i = data.length; i >=0; i--){\r\n                this.props.addMessage(data[i].message);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.callAPI();\r\n    }\r\n\r\n    render() {\r\n        const header = (<h3> Message Log</h3>);\r\n        return (<div>\r\n            {header}\r\n            <ul>\r\n                <Messages messages={this.props.messages} numberOfMessages={this.props.numberOfMessages} moveMessages={this.props.scrollingMessages} />\r\n            </ul>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addMessage })(MessageList);\r\n"]},"metadata":{},"sourceType":"module"}