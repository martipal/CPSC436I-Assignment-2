{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\MessageList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nconst startingSize = 100;\n\nclass MessageList extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    const header = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" Message Log\");\n    return this.props.messages[0]; // console.log(this.props);\n    // let ul = document.createAttribute(\"ul\");\n    // let messages = this.props.messages;\n    // let messagesLength = messages.length;\n    // let startingSize = determineStartingSize(messagesLength);\n    // let htmlMessages =[];\n    // console.log(messages);\n    // for (var i = 0; i < this.props.numberOfMessagesDisplayed; i++) {\n    //     let li = document.createElement(\"li\");\n    //     li.innerHTML = createInnerLIHTML(i, this.props.scrollingMessages, messages);\n    //     formatMessageItem(li);\n    //     startingSize = startingSize - 4;\n    //     htmlMessages.append(li);\n    //     console.log(li);\n    // }\n    // ul.innerHtml = htmlMessages;\n    // return (ul);\n  }\n\n}\n\nfunction determineStartingSize(messagesLength) {\n  if (messagesLength > 100) {\n    return 300;\n  }\n\n  return 80;\n}\n\nfunction createInnerLIHTML(i, scrollingMessages, messages) {\n  if (scrollingMessages === true) {\n    return React.createElement(\"marquee\", {\n      behaviour: \"alternate\",\n      onMouseOver: \"this.stop();\",\n      onMouseOut: \"this.start();\",\n      scrollAmount: \"16\",\n      onClick: () => {\n        window.open(\"//\" + \"google.com/search?q=\" + messages[i], \"_blank\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" messages[i] \");\n  } else {\n    return React.createElement(\"li\", {\n      onClick: () => {\n        window.open(\"//\" + \"google.com/search?q=\" + messages[i], '_blank');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"messages[i]\");\n  }\n}\n\nfunction formatMessageItem(li) {\n  li.style.color = '#' + Math.floor(Math.random() * 16777215).toString(16);\n  li.style.fontSize = startingSize + \"px\";\n  li.style.padding = \"0px\";\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps)(MessageList);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessageList.js"],"names":["React","Component","connect","startingSize","MessageList","constructor","render","header","props","messages","determineStartingSize","messagesLength","createInnerLIHTML","i","scrollingMessages","window","open","formatMessageItem","li","style","color","Math","floor","random","toString","fontSize","padding","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,YAAY,GAAG,GAArB;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACC,SAAhC,CAA0C;AAEtCI,EAAAA,WAAW,GAAE;AACT;AACH;;AAIDC,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAf;AACA,WAAQ,KAAKC,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAR,CAFK,CAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACH;;AA7BqC;;AAgC1C,SAASC,qBAAT,CAA+BC,cAA/B,EAA+C;AAC3C,MAAIA,cAAc,GAAG,GAArB,EAA0B;AACtB,WAAO,GAAP;AACH;;AACD,SAAO,EAAP;AACH;;AAED,SAASC,iBAAT,CAA2BC,CAA3B,EAA8BC,iBAA9B,EAAiDL,QAAjD,EAA2D;AACvD,MAAIK,iBAAiB,KAAK,IAA1B,EAAgC;AAC5B,WAAQ;AAAS,MAAA,SAAS,EAAC,WAAnB;AAA+B,MAAA,WAAW,EAAC,cAA3C;AAA0D,MAAA,UAAU,EAAC,eAArE;AAAqF,MAAA,YAAY,EAAC,IAAlG;AAAuG,MAAA,OAAO,EAAE,MAAM;AAACC,QAAAA,MAAM,CAACC,IAAP,CAAY,OAAO,sBAAP,GAAgCP,QAAQ,CAACI,CAAD,CAApD,EAAyD,QAAzD;AAAmE,OAA1L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAR;AACH,GAFD,MAEO;AACH,WAAQ;AAAI,MAAA,OAAO,EAAE,MAAM;AAACE,QAAAA,MAAM,CAACC,IAAP,CAAY,OAAO,sBAAP,GAAgCP,QAAQ,CAACI,CAAD,CAApD,EAAyD,QAAzD;AAAoE,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAR;AACH;AACJ;;AAED,SAASI,iBAAT,CAA2BC,EAA3B,EAA+B;AAC3BA,EAAAA,EAAE,CAACC,KAAH,CAASC,KAAT,GAAiB,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAvB;AACAN,EAAAA,EAAE,CAACC,KAAH,CAASM,QAAT,GAAoBtB,YAAY,GAAG,IAAnC;AACAe,EAAAA,EAAE,CAACC,KAAH,CAASO,OAAT,GAAmB,KAAnB;AACH;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHnB,IAAAA,QAAQ,EAAEmB,KAAK,CAACnB;AADb,GAAP;AAGH,CAJD;;AAMA,eAAeP,OAAO,CAACyB,eAAD,CAAP,CAAyBvB,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst startingSize = 100;\r\n\r\nclass MessageList extends React.Component {\r\n   \r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const header =(<h3> Message Log</h3>);\r\n        return (this.props.messages[0]);\r\n        // console.log(this.props);\r\n        // let ul = document.createAttribute(\"ul\");\r\n        // let messages = this.props.messages;\r\n        // let messagesLength = messages.length;\r\n        // let startingSize = determineStartingSize(messagesLength);\r\n        // let htmlMessages =[];\r\n        // console.log(messages);\r\n        // for (var i = 0; i < this.props.numberOfMessagesDisplayed; i++) {\r\n        //     let li = document.createElement(\"li\");\r\n        //     li.innerHTML = createInnerLIHTML(i, this.props.scrollingMessages, messages);\r\n        //     formatMessageItem(li);\r\n        //     startingSize = startingSize - 4;\r\n        //     htmlMessages.append(li);\r\n        //     console.log(li);\r\n        // }\r\n        // ul.innerHtml = htmlMessages;\r\n\r\n        // return (ul);\r\n    }\r\n}\r\n\r\nfunction determineStartingSize(messagesLength) {\r\n    if (messagesLength > 100) {\r\n        return 300;\r\n    }\r\n    return 80;\r\n}\r\n\r\nfunction createInnerLIHTML(i, scrollingMessages, messages) {\r\n    if (scrollingMessages === true) {\r\n        return (<marquee behaviour=\"alternate\" onMouseOver=\"this.stop();\" onMouseOut=\"this.start();\" scrollAmount=\"16\" onClick={() => {window.open(\"//\" + \"google.com/search?q=\" + messages[i], \"_blank\")}}> messages[i] </marquee>);\r\n    } else {\r\n        return (<li onClick={() => {window.open(\"//\" + \"google.com/search?q=\" + messages[i], '_blank');}}>messages[i]</li>);\r\n    }\r\n}\r\n\r\nfunction formatMessageItem(li) {\r\n    li.style.color = '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n    li.style.fontSize = startingSize + \"px\";\r\n    li.style.padding = \"0px\";\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MessageList);\r\n"]},"metadata":{},"sourceType":"module"}