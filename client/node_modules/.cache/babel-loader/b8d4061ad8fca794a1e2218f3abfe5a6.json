{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\cpsc436-assignment2\\\\src\\\\components\\\\MessagesPage.js\";\nimport React, { Component } from 'react';\nimport MessageForm from './MessageForm';\nimport MessageList from './MessageList';\nimport { connect } from 'react-redux';\nimport { createIFrame } from '../actions';\nlet NUMBER_OF_MESSAGES = 10;\nlet scrollingMessages = true;\n\nclass MessagesPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      numberOfMessagesDisplayed: 10,\n      scrollingMessages: true\n    };\n    this._collapseMessages = this._collapseMessages.bind(this);\n    this._expandMessages = this._expandMessages.bind(this);\n    this._toggleScroll = this._toggleScroll.bind(this);\n  }\n\n  _collapseMessages() {\n    this.setState({\n      numberOfMessagesDisplayed: 10\n    });\n  }\n\n  _expandMessages() {\n    this.setState({\n      numberOfMessagesDisplayed: 100\n    });\n  }\n\n  _toggleScroll() {\n    if (this.state.scrollingMessages) {\n      this.setState({\n        scrollingMessages: false\n      });\n    } else {\n      this.setState({\n        scrollingMessages: true\n      });\n    }\n\n    console.log(this.state.scrollingMessages);\n  }\n\n  closeIFrame() {\n    this.props.createIFrame(\"none\");\n  }\n\n  render() {\n    let scrollButton;\n\n    if (this.state.scrollingMessages) {\n      scrollButton = React.createElement(\"button\", {\n        id: \"stop_movement\",\n        className: \"button_stuff\",\n        onClick: this._toggleScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \" Stop Scroll\");\n    } else {\n      scrollButton = React.createElement(\"button\", {\n        id: \"stop_movement\",\n        className: \"button_stuff\",\n        onClick: this._toggleScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" Resume Scroll\");\n    }\n\n    let expandCollapseButton;\n\n    if (this.state.numberOfMessagesDisplayed === 10) {\n      expandCollapseButton = React.createElement(\"button\", {\n        id: \"expand_button\",\n        className: \"button_stuff\",\n        onClick: this._expandMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" Expand\");\n    } else {\n      expandCollapseButton = React.createElement(\"button\", {\n        id: \"collapse_button\",\n        className: \"button_stuff\",\n        onClick: this._collapseMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" Collapse\");\n    }\n\n    if (this.props.iFrame === \"none\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(MessageForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        numberOfMessages: this.state.numberOfMessagesDisplayed,\n        scrollingMessages: this.state.scrollingMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, scrollButton, expandCollapseButton));\n    } else {\n      let message = this.props.iFrame;\n      let iframeUrl = \"https://www.urbandictionary.com/define.php?term=\" + message.toString();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(MessageForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button_stuff\",\n        onClick: this.closeIFrame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" Close \"), React.createElement(\"iframe\", {\n        src: iframeUrl,\n        height: \"400\",\n        width: \"600\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        numberOfMessages: this.state.numberOfMessagesDisplayed,\n        scrollingMessages: this.state.scrollingMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, scrollButton, expandCollapseButton));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    iFrame: state.link\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createIFrame\n})(MessagesPage);","map":{"version":3,"sources":["C:\\Users\\marti\\cpsc436-assignment2\\src\\components\\MessagesPage.js"],"names":["React","Component","MessageForm","MessageList","connect","createIFrame","NUMBER_OF_MESSAGES","scrollingMessages","MessagesPage","constructor","state","numberOfMessagesDisplayed","_collapseMessages","bind","_expandMessages","_toggleScroll","setState","console","log","closeIFrame","props","render","scrollButton","expandCollapseButton","iFrame","message","iframeUrl","toString","mapStateToProps","link"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MessageForm from './MessageForm';\r\nimport MessageList from './MessageList';\r\nimport {connect} from 'react-redux';\r\nimport {createIFrame} from '../actions';\r\n\r\nlet NUMBER_OF_MESSAGES = 10;\r\n\r\nlet scrollingMessages = true;\r\n\r\n class MessagesPage extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            numberOfMessagesDisplayed: 10,\r\n            scrollingMessages: true\r\n        };\r\n        this._collapseMessages = this._collapseMessages.bind(this);\r\n        this._expandMessages = this._expandMessages.bind(this);\r\n        this._toggleScroll = this._toggleScroll.bind(this);\r\n    }\r\n\r\n    _collapseMessages() {\r\n        this.setState({ numberOfMessagesDisplayed: 10 });\r\n    }\r\n\r\n    _expandMessages() {\r\n        this.setState({ numberOfMessagesDisplayed: 100 });\r\n    }\r\n\r\n    _toggleScroll() {\r\n        if (this.state.scrollingMessages){\r\n        this.setState({ scrollingMessages: false });\r\n        } else {\r\n            this.setState({ scrollingMessages: true });\r\n        }\r\n        console.log(this.state.scrollingMessages);\r\n    }\r\n\r\n    closeIFrame(){\r\n        this.props.createIFrame(\"none\");\r\n    }\r\n\r\n    render() {\r\n        let scrollButton;\r\n\r\n        if (this.state.scrollingMessages){\r\n            scrollButton = (<button id=\"stop_movement\" className=\"button_stuff\" onClick={this._toggleScroll}> Stop Scroll\r\n            </button>);\r\n        } else {\r\n            scrollButton = (<button id=\"stop_movement\" className=\"button_stuff\" onClick={this._toggleScroll}> Resume Scroll\r\n            </button>);\r\n        }\r\n\r\n        let expandCollapseButton;\r\n        if (this.state.numberOfMessagesDisplayed === 10){\r\n            expandCollapseButton = (<button id=\"expand_button\" className=\"button_stuff\" onClick={this._expandMessages}> Expand</button>);\r\n        } else {\r\n            expandCollapseButton = (<button id=\"collapse_button\" className=\"button_stuff\" onClick={this._collapseMessages}> Collapse</button>);\r\n        }\r\n\r\n        if (this.props.iFrame === \"none\"){\r\n        return (<div>\r\n            <MessageForm />\r\n            <hr></hr>\r\n            <MessageList numberOfMessages={this.state.numberOfMessagesDisplayed} scrollingMessages={this.state.scrollingMessages} />\r\n            <div>\r\n                {scrollButton}\r\n                {expandCollapseButton}\r\n            </div>\r\n        </div>);\r\n        } else {\r\n            let message = this.props.iFrame;\r\n            let iframeUrl = \"https://www.urbandictionary.com/define.php?term=\" + message.toString();\r\n            return (<div>\r\n                <MessageForm />\r\n                <hr></hr>\r\n                <button className = \"button_stuff\" onClick={this. closeIFrame}> Close </button>\r\n                <iframe src={iframeUrl} height=\"400\" width=\"600\"/>\r\n                <hr></hr>\r\n                <MessageList numberOfMessages={this.state.numberOfMessagesDisplayed} scrollingMessages={this.state.scrollingMessages} />\r\n                <div>\r\n                    {scrollButton}\r\n                    {expandCollapseButton}\r\n                </div>\r\n            </div>);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        iFrame: state.link\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {createIFrame})(MessagesPage);"]},"metadata":{},"sourceType":"module"}